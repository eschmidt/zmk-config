/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "boards/nice_nano_v2.dtsi"

/ {
        macros {
            emoji: emoji {
                compatible = "zmk,behavior-macro";
                label = "MACRO_EMOJI_0";
                #binding-cells = <0>;
                bindings
                    = <&macro_press &kp LCTRL>
                    , <&macro_press &kp LCMD>
                    , <&macro_tap &kp SPACE>
                    , <&macro_release &kp LCMD>
                    , <&macro_release &kp LCTRL>
                    ;
            };
        };

        behaviors {
            opt_emoji: opt_emoji_0 {
                compatible = "zmk,behavior-tap-dance";
                label = "TAP_DANCE_OPTION_EMOJI_0";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp RALT>, <&emoji>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | `          |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I        |  O  |  P  | BKSP |
// | CTRL / TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K        |  L  |  ;  |  '   |
// | SHFT       |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,        |  .  |  /  | \    |
//                         | LCMD | LWR | SPC |   | ENT | RSE  | OPT_EMOJI |
                        bindings = <
   &kp GRAVE      &kp Q &kp W    &kp E    &kp R &kp T       &kp Y   &kp U  &kp I      &kp O   &kp P    &kp BSPC
   &mt LCTRL TAB  &kp A &kp S    &kp D    &kp F &kp G       &kp H   &kp J  &kp K      &kp L   &kp SEMI &kp SQT
   &kp LSHFT      &kp Z &kp X    &kp C    &kp V &kp B       &kp N   &kp M  &kp COMMA  &kp DOT &kp FSLH &kp BSLH
                                 &kp LCMD &mo 2 &kp SPACE   &kp RET &mo 1  &opt_emoji
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |     |     |  -  |  _  |         |   |         |  +  |  =  |     |     |      |
// |      |  <  |  [  |  (  |  {  |         |   |         |  }  |  )  |  ]  |  >  |      |
// |      |     |     |     |     |         |   |         | LFT |  UP | DWN | RGT |      |
//                    |     |     | RGB_TOG |   | RGB_EFF |     |     |
                        bindings = <
   &kp ESC    &trans  &trans    &kp MINUS  &kp UNDER  &trans            &trans           &kp PLUS  &kp EQUAL  &trans    &trans     &trans
   &trans     &kp LT  &kp LBKT  &kp LPAR   &kp LBRC   &trans            &trans           &kp RBRC  &kp RPAR   &kp RBKT  &kp GT     &trans
   &trans     &trans  &trans    &trans     &trans     &trans            &trans           &kp LEFT  &kp UP     &kp DOWN  &kp RIGHT  &trans
                          	    &trans     &trans     &rgb_ug RGB_TOG   &rgb_ug RGB_EFF  &trans    &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5     |   |    6     |  7  |  8  |  9  |  0  |     |
// |     |     |     |     |     |        |   |    =     |  4  |  5  |  6  |  *  |  +  |
// |     |     |     |     |     |        |   |          |  1  |  2  |  3  |  /  |  -  |
//                   |     |     | BL_TOG |   | BL_CYCLE |     |  0  |
                        bindings = <
   &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5      &kp N6        &kp N7  &kp N8  &kp N9 &kp N0    &trans
   &trans  &trans  &trans  &trans  &trans  &trans      &kp EQUAL     &kp N4  &kp N5  &kp N6 &kp STAR  &kp PLUS
   &trans  &trans  &trans  &trans  &trans  &trans      &trans        &kp N1  &kp N2  &kp N3 &kp FSLH  &kp MINUS
                    	   &trans  &trans  &bl BL_TOG  &bl BL_CYCLE  &trans  &kp N0
                        >;
                };
        };
};
